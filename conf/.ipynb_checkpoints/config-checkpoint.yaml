defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled

nolog:
  hydra:
    output_subdir: null
    run:
      dir: .

aggregation:
  metadata_file: .\data\csv\master_data.csv
  input_folder_ecs: .\data\csv\ecs
  input_folder_pwy: .\data\csv\pwy
  input_folder_tax: .\data\csv\tax
  output_folder_ecs: .\data\csv\ecs_agg
  output_folder_pwy: .\data\csv\pwy_agg
  output_folder_tax: .\data\csv\tax_agg
  # agg_function: [count, size, sum, mean, average, std, var, sem, describe, min, max, first, last, nth]
  # see https://sparkbyexamples.com/pandas/pandas-aggregate-functions-with-examples/
  # TODO: look into agg_function argumentens, e.g. for nth or potential custom functions
  agg_functions:
    - mean
    - std
  agg_on_fields:
    - age_group
  ecs_fields:
    - Enzyme
    - Genus
  tax_fields:
    - Genus
  pwy_fields:
    - PWY
    - Genus
  data_modification:
    grouping:
      - property: age # the property to group
        name: age_group # name of the new grouped column
        ungrouped_name: ungrouped # value of new grouped column if no group applies
        collect_file: .\data\csv\age_groups.csv # csv file to store collected data in
        collect_data:
          # define fields that are not part of the aggregation but which should be stored, e.g. for creating group nodes
          - collect_field: visit_number
            collect_in: visit_number_coll
          - collect_field: visit_id
            collect_in: visit_id_coll
          - collect_field: subject_id
            collect_in: subject_id_coll
        groups:
          # define the groups and the limits numerical values to assign the groups
          - lower_limit:
            upper_limit: 21
            group_name: young
          - lower_limit: 22
            upper_limit: 39
            group_name: medium
          - lower_limit: 40
            upper_limit:
            group_name: old
    agg_coefficients:
      - property: age
        # comparison = [lt, le, eq, ne, ge, gt] - same as object comparison functions: https://docs.python.org/3/library/operator.html
        comparison: eq
        value: 20
        coefficient: 100
      - property: age
        comparison: gt
        value: 40
        coefficient: 0.01
